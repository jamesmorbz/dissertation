services:
  # backfill:
  #   build: ./backfill
  #   depends_on:
  #     influxdb:
  #       condition: service_healthy
      

  # plug-wizard:
  #   build: ./plug-wizard
  #   restart: always

  # plug-controller:
  #   build: ./plug-controller
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - mqtt

  mock-plug-data-pusher:
    build: ./mock-plug-data-pusher
    restart: always
    depends_on:
      - mqtt

  mqtt:
    image: eclipse-mosquitto:2.0.18
    restart: always
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./diss-docker/mosquitto/data:/mosquitto/data
      - ./diss-docker/mosquitto/log:/mosquitto/log

  telegraf:
    image: telegraf:1.33.1
    restart: unless-stopped
    environment:
      - INFLUX_TOKEN=my-secret-token
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - mqtt
      - influxdb

  influxdb:
    image: influxdb:2.7.10
    restart: always
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=diss
      - DOCKER_INFLUXDB_INIT_BUCKET=admin
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-secret-token
      - DOCKER_INFLUXDB_INIT_CLI_CONFIG_NAME=$${shell openssl rand -base64 12}
    volumes:
      - ./diss-docker/influxdb:/var/lib/influxdb2
      - ./init_influx.sh:/docker-entrypoint-initdb.d/init_influx.sh
    healthcheck:
      test: ["CMD", "curl", "-sS", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:17.0
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=diss
    volumes:
      - ./diss-docker/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d diss"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build: ./backend
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      influxdb:
        condition: service_healthy
      postgres:
        condition: service_healthy

  # frontend:
  #   build: ./frontend
  #   restart: always
  #   ports:
  #     - "5000:5000"
  #   depends_on:
  #     - backend
